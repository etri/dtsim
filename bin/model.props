# schedule the simulation to stop at the specified tick.
schedule.stop.at = 1440

# parameters for grid space.
#grid.min.x = 0
#grid.min.y = 0
#grid.max.x = 100
#grid.max.y = 100
#grid.proc.per.x = 2
#grid.proc.per.y = 2
#grid.buffer = 2

# shapefile for buildings
# .shp file path without .shp extension
# id field index in .dbf file
# type field index in .dbf file
shapefile.buildings = /root/dtsim/data/sejong/buildings 
shapefile.buildings.id.field = 1 
shapefile.buildings.type.field = 0 
buildings.wkt.file = ./logs/buildings.wkt

# shapefile for junctions
# .shp file path without .shp extension
# id field index in .dbf file
shapefile.junctions = /root/dtsim/data/sejong/NODE
shapefile.junctions.id.field = 0
junctions.wkt.file = ./logs/junctions.wkt

# shapefile for road
# .shp file path without .shp extension
# id field index in .dbf file
# start junction id field index in .dbf file
# end junction id field index in .dbf file
shapefile.roads = /root/dtsim/data/sejong/LINK
shapefile.roads.id.field = 0
shapefile.roads.start.junction.id.field = 1
shapefile.roads.end.junction.id.field = 2
roads.wkt.file = ./logs/roads.wkt

# cache file for route network
# if set '1', pathfinding algorithm will be ignored
routecache.enable = 1
routecache.file = /root/dtsim/data/sejong/routecache.dat

# pathfinding algorithm
# supproted algorithms: astar(A*), bfs(Best-First Search), dijkstra
pathfinding.algorithm = astar

# formula to calculate geodetic distance (haversine(default), vincenty)
geodetic.distance.formula = haversine

# model specific parameters
